# Generated by Django 5.0.7 on 2024-10-29 09:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, unique=True)),
                ('color', models.CharField(choices=[('#FF6A3B', 'Orange'), ('#4076BA', 'Blue'), ('#C04277', 'Pink'), ('#16857A', 'Green'), ('#A97C50', 'Brown')], default='#FF6A3B', max_length=7)),
                ('is_public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('memo', models.TextField(blank=True, null=True)),
                ('participant', models.ManyToManyField(blank=True, related_name='participating_plan', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.category')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plan.plan')),
            ],
            options={
                'unique_together': {('plan', 'category')},
            },
        ),
        migrations.AddField(
            model_name='plan',
            name='category',
            field=models.ManyToManyField(related_name='plans', through='plan.PlanCategory', to='plan.category'),
        ),
    ]
